apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      # nodeName: node-fast
      initContainers:
      - name: init-postgres-db
        image: cgr.dev/chainguard/wait-for-it
        args:
        - postgres-postgresql.postgres.svc.cluster.local:5432
        - "--timeout=20" # Optional timeout in seconds
      - name: init-db-migrations
        image: backend:0.7.1
        command: ["/bin/sh", "-c"]
        args:
          - "python app/backend_pre_start.py && alembic upgrade head && python app/initial_data.py"
        envFrom:
          - secretRef:
              name: backend-secrets
      containers:
      - name: backend
        image: backend:0.7.1
        ports:
        - containerPort: 8000
          name: backend
        envFrom:
          - secretRef:
              name: backend-secrets
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /api/v1/utils/health-check/
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /api/v1/utils/health-check/
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10


